{"version":3,"sources":["components/SearchBar.js","components/ImageList.js","components/ImageModal.js","api/ImageClient.js","page/App.js","hooks/useGetImages.js","index.js"],"names":["useStyles","makeStyles","root","padding","display","alignItems","width","marginTop","input","marginLeft","flex","iconButton","divider","height","margin","SearchBar","onSubmit","styles","useState","query","setQuery","Paper","component","className","event","preventDefault","InputBase","placeholder","inputProps","onChange","e","target","value","IconButton","type","aria-label","Search","flexWrap","justifyContent","overflow","backgroundColor","gridList","background","loadingWrap","position","top","left","ImageList","images","onClickTile","isLoading","breakpoints","useMediaQuery","CircularProgress","size","color","GridList","cellHeight","cols","spacing","map","image","GridListTile","Math","ceil","rows","onClick","id","src","urls","thumb","alt","description","theme","modal","paper","palette","border","boxShadow","shadows","modalImageWrap","maxHeight","maxWidth","closeButton","right","ImageModal","open","handleClose","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Card","CardMedia","regular","CardContent","Link","href","links","html","referrerPolicy","user","name","axiosClient","axios","create","baseURL","headers","Authorization","searchImagesByQuery","page","a","get","params","res","getImageDetail","paddingTop","optionBar","App","currentPage","setCurrentPage","selectedImageId","setSelectedImageId","openImageModal","setOpenImageModal","loading","setLoading","result","setResult","totalPages","setTotalPages","useEffect","data","setTimeout","results","total_pages","callGetImage","useSearchImages","searchData","searchTotalPages","searchLoading","console","log","useGetImageDetail","detailData","detailLoading","loadPage","targetPage","Container","Typography","variant","fontSize","darkTheme","createMuiTheme","ReactDOM","render","Fragment","StylesProvider","injectFirst","ThemeProvider","document","querySelector"],"mappings":"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","file":"static/js/main.c0c75c9a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n    Paper,\n    InputBase,\n    IconButton\n} from '@material-ui/core'\nimport {\n    Search as SearchIcon,\n} from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        marginTop: 20,\n    },\n    input: {\n        marginLeft: 4,\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n}));\n\nconst SearchBar = ({ onSubmit }) => {\n    const styles = useStyles()\n    const [query, setQuery] = useState('')\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        onSubmit(query);\n    }\n\n    return (\n        <Paper component=\"form\" className={styles.root} onSubmit={handleSubmit}>\n            <InputBase\n                className={styles.input}\n                placeholder=\"Input keyword\"\n                inputProps={{ 'aria-label': 'search images' }}\n                onChange={e => setQuery(e.target.value)}\n            />\n            <IconButton type=\"submit\" className={styles.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n        </Paper>\n    )\n}\n\nexport default SearchBar;\n","import React from 'react'\nimport {\n    GridList,\n    useMediaQuery,\n    GridListTile,\n    CircularProgress\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: 'transparent',\n    },\n    gridList: {\n        width: '100%',\n        height: '100%',\n        background: 'transparent'\n    },\n    loadingWrap: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: 'rgba(0, 0, 0, 0.58)',\n    }\n}))\n\nconst ImageList = ({ images, onClickTile, isLoading }) => {\n    const styles = useStyles()\n    const breakpoints = useMediaQuery('(min-width: 768px)')\n\n    const calcAspect = (width, height) => {\n        if (!breakpoints) return 2\n\n        if (width < height) return 1\n\n        return Math.ceil(width / height)\n    }\n\n    return (\n        <div className={styles.root}>\n            { isLoading\n                ? <div className={styles.loadingWrap}>\n                    <CircularProgress size={400} color=\"secondary\" />\n                </div>\n                : <GridList\n                    cellHeight={450}\n                    cols={breakpoints ? 6 : 2}\n                    spacing={4}\n                >\n                {images.map(image=> (\n                    <GridListTile\n                        key={image.id}\n                        cols={calcAspect(image.width, image.height)}\n                        rows={breakpoints ? 1 : 2}\n                        onClick={() => onClickTile(image.id)}\n                    >\n                        <img\n                            src={image.urls.thumb}\n                            alt={image.description}\n                        />\n                    </GridListTile>\n                ))}\n                </GridList>\n            }\n        </div>\n    );\n}\n\nexport default ImageList;","import React from 'react'\nimport {\n  Modal,\n  Fade,\n  Backdrop,\n  Link,\n  Card,\n  CardMedia,\n  CardContent,\n  IconButton,\n  CircularProgress,\n} from '@material-ui/core'\nimport { CloseOutlined as CloseIcon } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  modalImageWrap: {\n    maxHeight: '90vh',\n    maxWidth: '90vw',\n\n    '& img': {\n      width: '100%',\n      maxHeight: '80vh'\n    },\n    position: 'relative'\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n  },\n  loadingWrap: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: 'rgba(0, 0, 0, 0.58)',\n}\n}))\n\nconst ImageModal = ({ image, open, handleClose, isLoading }) => {\n  const styles = useStyles()\n\n  if (!image) {\n    return <></>\n  }\n\n  return (\n    <>\n    {\n      isLoading\n        ? <div className={styles.loadingWrap}>\n            <CircularProgress size={400} color=\"secondary\" />\n          </div>\n        : <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={styles.modal}\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n              timeout: 500,\n            }}\n          >\n            <Fade in={open}>\n              <Card className={styles.modalImageWrap}>\n                <CardMedia\n                  component=\"img\"\n                  alt={image.description}\n                  image={image.urls.regular}\n                />\n\n                <CardContent>\n                  <Link href={image.links.html} color=\"textPrimary\" target=\"_blank\" referrerPolicy=\"no-referrer\">\n                    Photo by {image.user.name}, Unsplash\n                  </Link>\n                </CardContent>\n\n                <IconButton className={styles.closeButton} onClick={handleClose} size=\"medium\" color=\"secondary\">\n                  <CloseIcon />\n                </IconButton>\n              </Card>\n            </Fade>\n          </Modal>\n        }\n    </>\n  )\n}\n\nexport default ImageModal","import axios from 'axios'\n\nconst axiosClient = axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID ' + process.env['REACT_APP_PIC_API_KEY']\n    }\n})\n\nexport const searchImagesByQuery = async (query, page) => {\n    const res =  await axiosClient.get('/search/photos', {\n        params: { query, page }\n    })\n\n    return res\n}\n\nexport const getImageDetail = async (id) => {\n    const res = await axiosClient.get(`/photos/${id}`)\n\n    return res\n}","import React, { useState } from 'react'\n\nimport {\n    Container,\n    Typography,\n    IconButton,\n} from '@material-ui/core'\nimport {\n    ChevronLeft as PreviousIcon,\n    ChevronRight as NextIcon,\n} from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/styles'\n\nimport SearchBar from '../components/SearchBar'\nimport ImageList from '../components/ImageList'\nimport ImageModal from '../components/ImageModal'\n\nimport { useSearchImages, useGetImageDetail } from '../hooks/useGetImages'\n\nimport '../styles/global.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: theme.palette.background.paper,\n        paddingTop: 24,\n    },\n    optionBar: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        marginTop: 50,\n        alignItems: 'center',\n    }\n}))\n\nconst App = () => {\n    const styles = useStyles()\n\n    const [query, setQuery] = useState('')\n    const [currentPage, setCurrentPage] = useState(0)\n\n    const [selectedImageId, setSelectedImageId] = useState(null)\n    const [openImageModal, setOpenImageModal] = useState(false)\n\n    const [searchData, searchTotalPages, searchLoading] = useSearchImages(query, currentPage)\n    const [detailData, detailLoading] = useGetImageDetail(selectedImageId)\n\n    const onSearchSubmit = (query) => {\n        setQuery(query)\n        setCurrentPage(1)\n    }\n\n    const loadPage = (targetPage) => {\n        if (targetPage < 1 || targetPage > searchTotalPages) return\n\n        setCurrentPage(targetPage)\n    }\n\n    const showFullImage = (id) => {\n        setSelectedImageId(id)\n        setOpenImageModal(true)\n    }\n\n    const closeImageModal = () => {\n        setSelectedImageId('')\n        setOpenImageModal(false)\n    }\n\n    return (\n        <Container className={styles.root}>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n                Let's Search for Beautiful Photos!\n            </Typography>\n\n            <SearchBar onSubmit={onSearchSubmit} />\n\n            <div className={styles.optionBar}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    Page {currentPage} / {searchTotalPages}\n                </Typography>\n\n                <div>\n                    <IconButton color=\"secondary\" onClick={() => { loadPage(currentPage - 1) }}>\n                        <PreviousIcon fontSize=\"large\" />\n                    </IconButton>\n                    <IconButton color=\"secondary\" onClick={() => { loadPage(currentPage + 1) }}>\n                        <NextIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n            </div>\n\n            <ImageList images={searchData} onClickTile={showFullImage} isLoading={searchLoading} />\n\n            <ImageModal image={detailData} open={openImageModal} handleClose={closeImageModal} isLoading={detailLoading} />\n        </Container>\n    )\n}\n\nexport default App\n","import { useState, useEffect } from 'react'\n\nimport { searchImagesByQuery, getImageDetail } from '../api/ImageClient'\n\nexport const useSearchImages = (query, page = 1) => {\n  const [loading, setLoading] = useState(false)\n  const [result, setResult] = useState([])\n  const [totalPages, setTotalPages] = useState(0)\n\n  useEffect(() => {\n    const callGetImage = async (query, page) => {\n      setLoading(true)\n      const { data } = await searchImagesByQuery(query, page)\n\n      setTimeout(() => {\n        setResult(data.results)\n        setTotalPages(data.total_pages)\n        setLoading(false)\n      }, 2000)\n    }\n\n    callGetImage(query, page)\n  }, [query, page])\n\n  if (!query || !page) {\n    return [[], 0, false]\n  }\n\n  return [result, totalPages, loading]\n}\n\nexport const useGetImageDetail = (id) => {\n  const [loading, setLoading] = useState(false)\n  const [result, setResult] = useState(null)\n\n  useEffect(() => {\n    const callGetImage = async (id) => {\n      if (!id) return\n\n      setLoading(true)\n      const { data } = await getImageDetail(id)\n\n      setTimeout(() => {\n        console.log(data)\n        setResult(data)\n        setLoading(false)\n      }, 1000)\n    }\n\n    callGetImage(id)\n  }, [id])\n\n\n  if (!id) {\n    return [null, false]\n  }\n\n  return [result, loading]\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from '@material-ui/core'\nimport { StylesProvider, createMuiTheme } from '@material-ui/core/styles'\nimport App from './page/App'\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n});\n\nReactDOM.render(\n    <React.Fragment>\n        <StylesProvider injectFirst>\n            <ThemeProvider theme={darkTheme}>\n                <App />\n            </ThemeProvider>\n        </StylesProvider>\n    </React.Fragment>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}