{"version":3,"sources":["api/ImageClient.js","components/SearchBar.js","components/ImageList.js","components/ImageModal.js","page/App.js","index.js"],"names":["axiosClient","axios","create","baseURL","headers","Authorization","searchImagesByQuery","query","page","a","get","params","res","getImageDetail","id","useStyles","makeStyles","root","padding","display","alignItems","width","marginTop","input","marginLeft","flex","iconButton","divider","height","margin","SearchBar","onSubmit","styles","useState","setQuery","Paper","component","className","event","preventDefault","InputBase","placeholder","inputProps","onChange","e","target","value","IconButton","type","aria-label","Search","flexWrap","justifyContent","overflow","backgroundColor","gridList","background","ImageList","images","onClickTile","breakpoints","useMediaQuery","GridList","cellHeight","cols","spacing","map","image","GridListTile","Math","ceil","onClick","src","urls","thumb","alt","description","theme","modal","paper","palette","border","boxShadow","shadows","modalImageWrap","maxHeight","maxWidth","position","closeButton","top","right","ImageModal","open","handleClose","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Card","CardMedia","regular","CardContent","Link","href","links","html","color","referrerPolicy","user","name","size","paddingTop","optionBar","App","setImages","currentPage","setCurrentPage","totalPages","setTotalPages","selectedImage","setSelectedImage","openImageModal","setOpenImageModal","onSearchSubmit","data","results","total_pages","loadPage","targetPage","showFullImage","Container","Typography","variant","length","fontSize","darkTheme","createMuiTheme","ReactDOM","render","Fragment","StylesProvider","injectFirst","ThemeProvider","document","querySelector"],"mappings":"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","file":"static/js/main.64b0e3b9.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst axiosClient = axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID ' + process.env['REACT_APP_PIC_API_KEY']\n    }\n})\n\nexport const searchImagesByQuery = async (query, page) => {\n    const res =  await axiosClient.get('/search/photos', {\n        params: { query, page }\n    })\n\n    return res\n}\n\nexport const getImageDetail = async (id) => {\n    const res = await axiosClient.get(`/photos/${id}`)\n\n    return res\n}","import React, { useState } from 'react'\nimport {\n    Paper,\n    InputBase,\n    IconButton\n} from '@material-ui/core'\nimport {\n    Search as SearchIcon,\n} from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        marginTop: 20,\n    },\n    input: {\n        marginLeft: 4,\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n}));\n\nconst SearchBar = ({ onSubmit }) => {\n    const styles = useStyles()\n    const [query, setQuery] = useState('')\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        onSubmit(query);\n    }\n\n    return (\n        <Paper component=\"form\" className={styles.root} onSubmit={handleSubmit}>\n            <InputBase\n                className={styles.input}\n                placeholder=\"Input keyword\"\n                inputProps={{ 'aria-label': 'search images' }}\n                onChange={e => setQuery(e.target.value)}\n            />\n            <IconButton type=\"submit\" className={styles.iconButton} aria-label=\"search\">\n                <SearchIcon />\n            </IconButton>\n        </Paper>\n    )\n}\n\nexport default SearchBar;\n","import React from 'react'\nimport {\n    GridList,\n    useMediaQuery,\n    GridListTile\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: 'transparent',\n    },\n    gridList: {\n        width: '100%',\n        height: '100%',\n        background: 'transparent'\n    },\n}))\n\nconst ImageList = ({ images, onClickTile }) => {\n    const styles = useStyles()\n    const breakpoints = useMediaQuery('(min-width: 768px)')\n\n    const calcAspect = (width, height) => {\n        if (width < height) return 1\n\n        return Math.ceil(width / height)\n    }\n\n    return (\n        <div className={styles.root}>\n            <GridList\n                cellHeight={450}\n                cols={breakpoints ? 6 : 2}\n                spacing={4}\n            >\n                {images.map(image=> (\n                    <GridListTile\n                        key={image.id}\n                        cols={calcAspect(image.width, image.height)}\n                        onClick={() => onClickTile(image.id)}\n                    >\n                        <img\n                            src={image.urls.thumb}\n                            alt={image.description}\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n\nexport default ImageList;","import React from 'react'\nimport {\n  Modal,\n  Fade,\n  Backdrop,\n  Link,\n  Card,\n  CardMedia,\n  CardContent,\n  IconButton,\n} from '@material-ui/core'\nimport { CloseOutlined as CloseIcon } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  modalImageWrap: {\n    maxHeight: '90vh',\n    maxWidth: '90vw',\n\n    '& img': {\n      width: '100%',\n      maxHeight: '80vh'\n    },\n    position: 'relative'\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n  }\n}))\n\nconst ImageModal = ({ image, open, handleClose }) => {\n  const styles = useStyles()\n\n  return (\n    <>\n    {\n      image === null\n        ? <></>\n        : <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={styles.modal}\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n              timeout: 500,\n            }}\n          >\n            <Fade in={open}>\n              <Card className={styles.modalImageWrap}>\n                <CardMedia\n                  component=\"img\"\n                  alt={image.description}\n                  image={image.urls.regular}\n                />\n\n                <CardContent>\n                  <Link href={image.links.html} color=\"textPrimary\" target=\"_blank\" referrerPolicy=\"no-referrer\">\n                    Photo by {image.user.name}, Unsplash\n                  </Link>\n                </CardContent>\n\n                <IconButton className={styles.closeButton} onClick={handleClose} size=\"medium\" color=\"secondary\">\n                  <CloseIcon />\n                </IconButton>\n              </Card>\n            </Fade>\n          </Modal>\n        }\n    </>\n  )\n}\n\nexport default ImageModal","import React, { useState } from 'react'\n\nimport {\n    Container,\n    Typography,\n    IconButton,\n} from '@material-ui/core'\nimport {\n    ChevronLeft as PreviousIcon,\n    ChevronRight as NextIcon,\n} from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/styles'\n\nimport {\n    searchImagesByQuery,\n    getImageDetail\n} from '../api/ImageClient'\nimport SearchBar from '../components/SearchBar'\nimport ImageList from '../components/ImageList'\nimport ImageModal from '../components/ImageModal'\n\nimport '../styles/global.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        background: theme.palette.background.paper,\n        paddingTop: 24,\n    },\n    optionBar: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        marginTop: 50,\n        alignItems: 'center',\n    }\n}))\n\nconst App = () => {\n    const styles = useStyles()\n\n    const [images, setImages] = useState([])\n    const [query, setQuery] = useState('')\n    const [currentPage, setCurrentPage] = useState(0)\n    const [totalPages, setTotalPages] = useState(0)\n\n    const [selectedImage, setSelectedImage] = useState(null)\n    const [openImageModal, setOpenImageModal] = useState(false)\n\n    const onSearchSubmit = async (query) => {\n        const { data } = await searchImagesByQuery(query, 1);\n\n        setImages(data.results)\n        setQuery(query)\n        setCurrentPage(1)\n        setTotalPages(data.total_pages)\n    }\n\n    const loadPage = async (targetPage) => {\n        if (targetPage < 1 || targetPage > totalPages) return;\n\n        const { data } = await searchImagesByQuery(query, targetPage);\n\n        setImages(data.results)\n        setCurrentPage(targetPage)\n    }\n\n    const showFullImage = async (id) => {\n        const { data } = await getImageDetail(id)\n\n        setSelectedImage(data)\n        setOpenImageModal(true)\n    }\n\n    const closeImageModal = () => {\n        setSelectedImage(null)\n        setOpenImageModal(false)\n    }\n\n    return (\n        <Container className={styles.root}>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n                Let's Search Beautiful Photos!\n            </Typography>\n\n            <SearchBar onSubmit={onSearchSubmit} />\n\n            <div className={styles.optionBar}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    Showing {images.length} images\n                </Typography>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                    Page {currentPage} / {totalPages}\n                </Typography>\n\n                <div>\n                    <IconButton color=\"primary\" onClick={() => { loadPage(currentPage - 1) }}>\n                        <PreviousIcon fontSize=\"large\" />\n                    </IconButton>\n                    <IconButton color=\"primary\" onClick={() => { loadPage(currentPage + 1) }}>\n                        <NextIcon fontSize=\"large\" />\n                    </IconButton>\n                </div>\n            </div>\n\n            <ImageList images={images} onClickTile={showFullImage} />\n\n            <ImageModal image={selectedImage} open={openImageModal} handleClose={closeImageModal} />\n        </Container>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from '@material-ui/core'\nimport { StylesProvider, createMuiTheme } from '@material-ui/core/styles'\nimport App from './page/App'\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n    },\n});\n\nReactDOM.render(\n    <React.Fragment>\n        <StylesProvider injectFirst>\n            <ThemeProvider theme={darkTheme}>\n                <App />\n            </ThemeProvider>\n        </StylesProvider>\n    </React.Fragment>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}